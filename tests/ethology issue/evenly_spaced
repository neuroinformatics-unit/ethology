import subprocess
import numpy as np
import os

FFPROBE_PATH = r"C:\ffmpeg\bin\ffprobe.exe"
FFMPEG_PATH = r"C:\ffmpeg\bin\ffmpeg.exe"

def extract_evenly_spaced_frames_ffmpeg(video_path, num_frames, output_folder):
    try:
        if not os.path.exists(video_path):
            raise FileNotFoundError(f"Video file not found: {video_path}")
        
        os.makedirs(output_folder, exist_ok=True)
        
        # Get video duration
        result = subprocess.run(
            [FFPROBE_PATH, "-v", "error", "-show_entries", "format=duration",
             "-of", "default=noprint_wrappers=1:nokey=1", video_path],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
            check=True,
        )
        duration = float(result.stdout.strip())
        
        timestamps = np.linspace(0, duration, num=num_frames)
        
        for i, timestamp in enumerate(timestamps):
            output_file = os.path.join(output_folder, f"frame_{i:04d}.jpg")
            subprocess.run(
                [
                    FFMPEG_PATH,
                    "-ss", str(timestamp),
                    "-i", video_path,
                    "-vf", "format=yuvj420p",  # Force full-range YUV for MJPEG
                    "-frames:v", "1",
                    "-y",
                    output_file
                ],
                check=True,
                stderr=subprocess.PIPE,
            )
            print(f"Saved frame {i+1}/{num_frames}")
            
    except subprocess.CalledProcessError as e:
        print(f"FFmpeg error: {e.stderr}")
    except Exception as e:
        print(f"Error: {str(e)}")

# Usage
extract_evenly_spaced_frames_ffmpeg(
    "baboon.mp4", 
    10, 
    "extracted_frames"
)
